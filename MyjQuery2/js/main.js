'use strict';

//ボタンをクリックすると、Item5の下に要素が追加されるようにする。

$(() => {
  const $input=$('input');
  //入力部品のセレクターが変わる場合、変更箇所が少なくなるよう
  //定数の設定をする。この定数＝jQueryで取得したオブジェクト
  //であることがわかりやすいように、定数名の前に$をつける
  //下記の、'input'を、$input(定数名なので’’なし)に置き換える。
  $input.focus();
   //ページ読み込み時点で、フォームにフォーカスが当たっているようにする。

  $('button').click(() => {
    $('<li>')
    //もうひとつliを追加=新しい要素を作る=< >記号をつける。
    //これをつけないと、既にある要素への適用となる。
      .text($input.val())
      //新しい要素に入れる文字列(’’)は、
      //①input（入力フォーム）から=$('input')
      //②val()（入力された値）とする。
      //定数指定により、'input'を、$inputに置き換える。
      .appendTo('ul');
      //これを、ulの子要素の末尾に加えるメソッド=appendTo（$'ul'もしくは'ul)
    $input
      //定数指定により、'input'を、$inputに置き換える。
      .val('')
      .focus();
      // （入力後）クリックすると、inputの値を空にする設定
      //inputタグを空=''にする。
      //その後、入力フォームにフォーカスがあたる設定=.focus()
      //$('要素名')の後の指示一式の最後にのみ;がつくことに注意！！！
  });
  $('ul').click(e=>{
    if (e.target.nodeName !=='LI'||!confirm('Are you sure?')){
      return;
    }
    $(e.target).fadeOut();
    // マウスホバーしたら出てくるxクリックしたら削除できる設定
    //remove→fadeOutとすると、ふわっと消える
    //e.targetはjQueryでないので、$()で囲む
    // クリックされた要素=e.targetが、
    //●要素名.nodeName!==''(nodeNameが''でないとき（''内は大文字！）
    //＝li要素でないときおよび、confirm()で本当に削除しますか、と聞いて
    //それがfalse(=!),つまりキャンセルだった場合は、return=消さない
    //confirm()＝確認メッセージの表示
    
    //●それ以外＝e.target.remove()＝消す

  });

});


